{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/question.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../option/option.component\";\nfunction QuestionComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function QuestionComponent_div_11_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.submit());\n    });\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3, \"Submit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.progress != \"100\");\n  }\n}\nfunction QuestionComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"span\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Your Score: \", ctx_r1.quizResult, \"\");\n  }\n}\nfunction QuestionComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"span\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.textError);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    width: a0\n  };\n};\nexport class QuestionComponent {\n  constructor(questionService) {\n    this.questionService = questionService;\n    this.name = '';\n    this.userId = '';\n    this.quizResult = '';\n    this.questionList = [];\n    this.currentQuestion = 0;\n    this.progress = '0';\n    this.answers = new Map();\n    this.textError = '';\n    this.textErrorComment = '';\n  }\n  ngOnInit() {\n    this.name = localStorage.getItem('name');\n    this.userId = localStorage.getItem('id');\n    this.getAllQuestions();\n  }\n  getAllQuestions() {\n    this.questionService.getQuestionJson().subscribe(res => {\n      this.questionList = res;\n      this.textError = '';\n    }, err => {\n      console.log(err);\n      this.textError = 'An error has occured, please try again later';\n    });\n  }\n  nextQuestion() {\n    this.currentQuestion = (this.currentQuestion + 1) % this.questionList.length;\n    this.textErrorComment = '';\n  }\n  previousQuestion() {\n    this.currentQuestion = this.currentQuestion - 1;\n    if (this.currentQuestion < 0) this.currentQuestion = this.questionList.length - 1;\n    this.textErrorComment = '';\n  }\n  setProgressPrecent() {\n    this.progress = (this.answers.size / this.questionList.length * 100).toString();\n  }\n  reset() {\n    for (let i = 0; i < this.questionList.length; i++) {\n      this.questionList[i].comment = '';\n    }\n    this.progress = '0';\n    this.currentQuestion = 0;\n    this.quizResult = '';\n    this.answers = new Map();\n    this.textErrorComment = '';\n  }\n  submit() {\n    let answersForEachQuestionScores = this.buildAnswers();\n    this.questionService.getQuizResult(answersForEachQuestionScores).subscribe(res => {\n      this.quizResult = res;\n      this.textError = '';\n    }, err => {\n      console.log(err);\n      this.textError = 'An error has occured, please try again later';\n    });\n  }\n  buildAnswers() {\n    let answersForEachQuestionScores = [];\n    for (let i = 0; i < this.answers.size; i++) {\n      let options = this.answers.get(i) ?? [];\n      let answer = {\n        userId: this.userId,\n        questionId: this.questionList[i].id,\n        chosenOptions: options,\n        questionType: this.questionList[i].type,\n        comment: this.questionList[i].comment\n      };\n      answersForEachQuestionScores.push(answer);\n    }\n    return answersForEachQuestionScores;\n  }\n  setTextErrorComment(textErrorComment) {\n    this.textErrorComment = textErrorComment;\n  }\n  static #_ = this.ɵfac = function QuestionComponent_Factory(t) {\n    return new (t || QuestionComponent)(i0.ɵɵdirectiveInject(i1.QuestionService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuestionComponent,\n    selectors: [[\"app-question\"]],\n    decls: 33,\n    vars: 14,\n    consts: [[1, \"container\", \"mt-5\"], [1, \"card\"], [1, \"d-flex\", \"justify-content-between\", \"p-3\"], [1, \"image\"], [\"src\", \"https://mario.nintendo.com/static/12a46ed6612384e88499f6c8593ef61b/e30b6/mario-unstack-closed.png\", \"width\", \"90\", \"alt\", \"logo\"], [1, \"quiz-header\"], [2, \"font-family\", \"cursive\", \"text-align\", \"center\"], [2, \"font-style\", \"italic\"], [1, \"d-flex\", \"justify-content-around\", \"py-3\"], [\"class\", \"question-remain\", 4, \"ngIf\"], [\"class\", \"quizResult\", 4, \"ngIf\"], [\"class\", \"textError\", 4, \"ngIf\"], [1, \"question-remain\"], [1, \"progress\", \"mb-3\"], [\"id\", \"progress-bar\", \"role\", \"progressbar\", \"aria-label\", \"Success striped example\", \"aria-valuenow\", \"25\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-striped\", \"bg-success\", 2, \"width\", \"25%\", 3, \"ngStyle\"], [1, \"question\"], [3, \"currentQuestion\", \"answers\", \"questionList\", \"textErrorComment\", \"setProgressPrecent\", \"setTextErrorComment\"], [1, \"d-flex\", \"justify-content-between\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"button\", 3, \"disabled\", \"click\"], [1, \"quizResult\"], [1, \"textError\"]],\n    template: function QuestionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"h4\", 6);\n        i0.ɵɵtext(7, \"Mario Quiz!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"span\", 7);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵtemplate(11, QuestionComponent_div_11_Template, 4, 1, \"div\", 9);\n        i0.ɵɵtemplate(12, QuestionComponent_div_12_Template, 3, 1, \"div\", 10);\n        i0.ɵɵtemplate(13, QuestionComponent_div_13_Template, 3, 1, \"div\", 11);\n        i0.ɵɵelementStart(14, \"div\", 12)(15, \"span\", 7);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"div\", 13);\n        i0.ɵɵelement(18, \"div\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 15)(20, \"div\", 1)(21, \"h3\");\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"app-option\", 16);\n        i0.ɵɵlistener(\"setProgressPrecent\", function QuestionComponent_Template_app_option_setProgressPrecent_23_listener() {\n          return ctx.setProgressPrecent();\n        })(\"setTextErrorComment\", function QuestionComponent_Template_app_option_setTextErrorComment_23_listener($event) {\n          return ctx.setTextErrorComment($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 17)(25, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function QuestionComponent_Template_button_click_25_listener() {\n          return ctx.previousQuestion();\n        });\n        i0.ɵɵelementStart(26, \"span\");\n        i0.ɵɵtext(27, \" << \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function QuestionComponent_Template_button_click_28_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(29, \"Reset\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function QuestionComponent_Template_button_click_30_listener() {\n          return ctx.nextQuestion();\n        });\n        i0.ɵɵelementStart(31, \"span\");\n        i0.ɵɵtext(32, \">>\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate1(\"Welcome \", ctx.name, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.quizResult == \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.quizResult != \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.textError != \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"Question \", ctx.currentQuestion + 1, \" of \", ctx.questionList.length, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(12, _c0, ctx.progress + \"%\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.questionList[ctx.currentQuestion] == null ? null : ctx.questionList[ctx.currentQuestion].questionText);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"currentQuestion\", ctx.currentQuestion)(\"answers\", ctx.answers)(\"questionList\", ctx.questionList)(\"textErrorComment\", ctx.textErrorComment);\n      }\n    },\n    dependencies: [i2.NgIf, i2.NgStyle, i3.OptionComponent],\n    styles: [\".card[_ngcontent-%COMP%] {\\r\\n  max-width: 800px;\\r\\n  margin: 0 auto;\\r\\n  padding: 10px;\\r\\n}\\r\\nli[_ngcontent-%COMP%] {\\r\\n  list-style-type: none;\\r\\n  cursor: pointer;\\r\\n  margin: 10px 0;\\r\\n}\\r\\nol[_ngcontent-%COMP%] {\\r\\n  padding: 0;\\r\\n}\\n/*# sourceURL=webpack://./src/app/question/question.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXVlc3Rpb24vcXVlc3Rpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2QsYUFBYTtBQUNmO0FBQ0E7RUFDRSxxQkFBcUI7RUFDckIsZUFBZTtFQUNmLGNBQWM7QUFDaEI7QUFDQTtFQUNFLFVBQVU7QUFDWiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcclxuICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxubGkge1xyXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgbWFyZ2luOiAxMHB4IDA7XHJcbn1cclxub2wge1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;IAaMA,+BAAsD;IACCA;MAAAA;MAAA;MAAA,OAASA,8BAAQ;IAAA,EAAC;IACrEA,4BAAM;IAAAA,sBAAM;IAAAA,iBAAO;;;;IADbA,eAA8B;IAA9BA,mDAA8B;;;;;IAIxCA,+BAAiD;IACdA,YAA4B;IAAAA,iBAAO;;;;IAAnCA,eAA4B;IAA5BA,4DAA4B;;;;;IAE/DA,+BAA+C;IACZA,YAAe;IAAAA,iBAAO;;;;IAAtBA,eAAe;IAAfA,sCAAe;;;;;;;;ACdxD,OAAM,MAAOC,iBAAiB;EAY5BC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAV5B,SAAI,GAAW,EAAE;IACjB,WAAM,GAAW,EAAE;IACnB,eAAU,GAAW,EAAE;IACvB,iBAAY,GAAe,EAAE;IAC7B,oBAAe,GAAW,CAAC;IAC3B,aAAQ,GAAW,GAAG;IAC7B,YAAO,GAAG,IAAIC,GAAG,EAAoB;IACrC,cAAS,GAAW,EAAE;IACf,qBAAgB,GAAG,EAAE;EAE4B;EAExDC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAE;IACzC,IAAI,CAACC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,IAAI,CAAE;IACzC,IAAI,CAACE,eAAe,EAAE;EACxB;EAEAA,eAAe;IACb,IAAI,CAACP,eAAe,CAACQ,eAAe,EAAE,CAACC,SAAS,CAC7CC,GAAe,IAAI;MAClB,IAAI,CAACC,YAAY,GAAGD,GAAG;MACvB,IAAI,CAACE,SAAS,GAAG,EAAE;IACrB,CAAC,EACAC,GAAG,IAAI;MACNC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACD,SAAS,GAAG,8CAA8C;IACjE,CAAC,CACF;EACH;EAEAI,YAAY;IACV,IAAI,CAACC,eAAe,GAClB,CAAC,IAAI,CAACA,eAAe,GAAG,CAAC,IAAI,IAAI,CAACN,YAAY,CAACO,MAAM;IAEvD,IAAI,CAACC,gBAAgB,GAAG,EAAE;EAC5B;EAEAC,gBAAgB;IACd,IAAI,CAACH,eAAe,GAAG,IAAI,CAACA,eAAe,GAAG,CAAC;IAC/C,IAAI,IAAI,CAACA,eAAe,GAAG,CAAC,EAC1B,IAAI,CAACA,eAAe,GAAG,IAAI,CAACN,YAAY,CAACO,MAAM,GAAG,CAAC;IAErD,IAAI,CAACC,gBAAgB,GAAG,EAAE;EAC5B;EAEAE,kBAAkB;IAChB,IAAI,CAACC,QAAQ,GAAG,CACb,IAAI,CAACC,OAAO,CAACC,IAAI,GAAG,IAAI,CAACb,YAAY,CAACO,MAAM,GAC7C,GAAG,EACHO,QAAQ,EAAE;EACd;EAEAC,KAAK;IACH,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAChB,YAAY,CAACO,MAAM,EAAES,CAAC,EAAE,EAAE;MACjD,IAAI,CAAChB,YAAY,CAACgB,CAAC,CAAC,CAACC,OAAO,GAAG,EAAE;;IAGnC,IAAI,CAACN,QAAQ,GAAG,GAAG;IACnB,IAAI,CAACL,eAAe,GAAG,CAAC;IACxB,IAAI,CAACY,UAAU,GAAG,EAAE;IACpB,IAAI,CAACN,OAAO,GAAG,IAAItB,GAAG,EAAoB;IAC1C,IAAI,CAACkB,gBAAgB,GAAG,EAAE;EAC5B;EAEAW,MAAM;IACJ,IAAIC,4BAA4B,GAAa,IAAI,CAACC,YAAY,EAAE;IAEhE,IAAI,CAAChC,eAAe,CAACiC,aAAa,CAACF,4BAA4B,CAAC,CAACtB,SAAS,CACvEC,GAAW,IAAI;MACd,IAAI,CAACmB,UAAU,GAAGnB,GAAG;MACrB,IAAI,CAACE,SAAS,GAAG,EAAE;IACrB,CAAC,EACAC,GAAG,IAAI;MACNC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACD,SAAS,GAAG,8CAA8C;IACjE,CAAC,CACF;EACH;EAEAoB,YAAY;IACV,IAAID,4BAA4B,GAAa,EAAE;IAC/C,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACJ,OAAO,CAACC,IAAI,EAAEG,CAAC,EAAE,EAAE;MAC1C,IAAIO,OAAO,GAAG,IAAI,CAACX,OAAO,CAACY,GAAG,CAACR,CAAC,CAAC,IAAI,EAAE;MACvC,IAAIS,MAAM,GAAW;QACnB9B,MAAM,EAAE,IAAI,CAACA,MAAM;QACnB+B,UAAU,EAAE,IAAI,CAAC1B,YAAY,CAACgB,CAAC,CAAC,CAACW,EAAE;QACnCC,aAAa,EAAEL,OAAO;QACtBM,YAAY,EAAE,IAAI,CAAC7B,YAAY,CAACgB,CAAC,CAAC,CAACc,IAAI;QACvCb,OAAO,EAAE,IAAI,CAACjB,YAAY,CAACgB,CAAC,CAAC,CAACC;OAC/B;MACDG,4BAA4B,CAACW,IAAI,CAACN,MAAM,CAAC;;IAE3C,OAAOL,4BAA4B;EACrC;EAEAY,mBAAmB,CAACxB,gBAAwB;IAC1C,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;EAC1C;EAAC;qBApGUrB,iBAAiB;EAAA;EAAA;UAAjBA,iBAAiB;IAAA8C;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDR9BnD,8BAA4B;QAIpBA,yBAC0B;QAC5BA,iBAAM;QACNA,8BAAyB;QAC8BA,2BAAW;QAAAA,iBAAK;QACrEA,+BAAiC;QAAAA,YAAkB;QAAAA,iBAAO;QAG9DA,+BAAgD;QAC9CA,oEAIM;QACNA,qEAEM;QACNA,qEAEM;QACNA,gCAA6B;QACMA,aAA+D;QAAAA,iBAAO;QAG3GA,gCAA2B;QACzBA,2BAE8C;QAChDA,iBAAM;QACNA,gCAAsB;QAEdA,aAAiD;QAAAA,iBAAK;QAG9DA,uCACwI;QAAhGA;UAAA,OAAsBoD,wBAAoB;QAAA,EAAC;UAAA,OAAwBA,+BAA2B;QAAA,EAAnD;QACnFpD,iBAAa;QACbA,gCAA4C;QACpBA;UAAA,OAASoD,sBAAkB;QAAA,EAAC;QAChDpD,6BAAM;QACJA,qBAAG;QAAAA,iBAAO;QAEdA,mCAAwC;QAAlBA;UAAA,OAASoD,WAAO;QAAA,EAAC;QAACpD,sBAAK;QAAAA,iBAAS;QACtDA,mCAA+C;QAAzBA;UAAA,OAASoD,kBAAc;QAAA,EAAC;QAACpD,6BAAM;QAAAA,mBAAE;QAAAA,iBAAO;;;QAtC3BA,eAAkB;QAAlBA,+CAAkB;QAIvBA,eAAsB;QAAtBA,2CAAsB;QAK3BA,eAAsB;QAAtBA,2CAAsB;QAGvBA,eAAqB;QAArBA,0CAAqB;QAIVA,eAA+D;QAA/DA,gGAA+D;QAKhGA,eAAqC;QAArCA,yEAAqC;QAKjCA,eAAiD;QAAjDA,+HAAiD;QAG7CA,eAAmC;QAAnCA,qDAAmC","names":["i0","QuestionComponent","constructor","questionService","Map","ngOnInit","name","localStorage","getItem","userId","getAllQuestions","getQuestionJson","subscribe","res","questionList","textError","err","console","log","nextQuestion","currentQuestion","length","textErrorComment","previousQuestion","setProgressPrecent","progress","answers","size","toString","reset","i","comment","quizResult","submit","answersForEachQuestionScores","buildAnswers","getQuizResult","options","get","answer","questionId","id","chosenOptions","questionType","type","push","setTextErrorComment","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\97252\\source\\repos\\QuizProject\\ClientSide\\src\\app\\question\\question.component.html","C:\\Users\\97252\\source\\repos\\QuizProject\\ClientSide\\src\\app\\question\\question.component.ts"],"sourcesContent":["<div class=\"container mt-5\">\r\n  <div class=\"card\">\r\n    <div class=\"d-flex justify-content-between p-3\">\r\n      <div class=\"image\">\r\n        <img src=\"https://mario.nintendo.com/static/12a46ed6612384e88499f6c8593ef61b/e30b6/mario-unstack-closed.png\"\r\n          width=\"90\" alt=\"logo\" />\r\n      </div>\r\n      <div class=\"quiz-header\">\r\n        <h4 style=\"font-family: cursive; text-align: center\">Mario Quiz!</h4>\r\n        <span style=\"font-style: italic\">Welcome {{ name }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"d-flex justify-content-around py-3\">\r\n      <div class=\"question-remain\" *ngIf=\"quizResult == ''\">\r\n        <button [disabled]=\"progress != '100'\" type=\"button\" (click)=\"submit()\">\r\n          <span>Submit</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"quizResult\" *ngIf=\"quizResult != ''\">\r\n        <span style=\"font-style: italic\">Your Score: {{ quizResult }}</span>\r\n      </div>\r\n      <div class=\"textError\" *ngIf=\"textError != ''\">\r\n        <span style=\"font-style: italic\">{{ textError }}</span>\r\n      </div>\r\n      <div class=\"question-remain\">\r\n        <span style=\"font-style: italic\">Question {{ currentQuestion + 1 }} of {{ questionList.length }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"progress mb-3\">\r\n      <div class=\"progress-bar progress-bar-striped bg-success\" id=\"progress-bar\" role=\"progressbar\"\r\n        [ngStyle]=\"{ width: progress + '%' }\" aria-label=\"Success striped example\" style=\"width: 25%\" aria-valuenow=\"25\"\r\n        aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n    <div class=\"question\">\r\n      <div class=\"card\">\r\n        <h3>{{ questionList[currentQuestion]?.questionText }}</h3>\r\n      </div>\r\n    </div>\r\n    <app-option [currentQuestion]=\"currentQuestion\" [answers]=\"answers\" [questionList]=\"questionList\"\r\n      [textErrorComment]=\"textErrorComment\" (setProgressPrecent)=\"setProgressPrecent()\" (setTextErrorComment)=\"setTextErrorComment($event)\">\r\n    </app-option>\r\n    <div class=\"d-flex justify-content-between\">\r\n      <button type=\"button\" (click)=\"previousQuestion()\">\r\n        <span>\r\n          << </span>\r\n      </button>\r\n      <button type=\"button\" (click)=\"reset()\">Reset</button>\r\n      <button type=\"button\" (click)=\"nextQuestion()\"><span>>></span></button>\r\n    </div>\r\n  </div>\r\n</div>","import { QuestionService } from '../service/question.service';\r\nimport { question, option, answer } from '../models/question';\r\nimport { Component } from '@angular/core';\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css'],\r\n})\r\nexport class QuestionComponent {\r\n\r\n  public name: string = '';\r\n  public userId: string = '';\r\n  public quizResult: string = '';\r\n  public questionList: question[] = [];\r\n  public currentQuestion: number = 0;\r\n  public progress: string = '0';\r\n  answers = new Map<number, option[]>();\r\n  textError: string = '';\r\n  public textErrorComment = '';\r\n\r\n  constructor(private questionService: QuestionService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.name = localStorage.getItem('name')!;\r\n    this.userId = localStorage.getItem('id')!;\r\n    this.getAllQuestions();\r\n  }\r\n\r\n  getAllQuestions() {\r\n    this.questionService.getQuestionJson().subscribe(\r\n      (res: question[]) => {\r\n        this.questionList = res;\r\n        this.textError = '';\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.textError = 'An error has occured, please try again later';\r\n      }\r\n    );\r\n  }\r\n\r\n  nextQuestion() {\r\n    this.currentQuestion =\r\n      (this.currentQuestion + 1) % this.questionList.length;\r\n\r\n    this.textErrorComment = '';\r\n  }\r\n\r\n  previousQuestion() {\r\n    this.currentQuestion = this.currentQuestion - 1;\r\n    if (this.currentQuestion < 0)\r\n      this.currentQuestion = this.questionList.length - 1;\r\n\r\n    this.textErrorComment = '';\r\n  }\r\n\r\n  setProgressPrecent() {\r\n    this.progress = (\r\n      (this.answers.size / this.questionList.length) *\r\n      100\r\n    ).toString();\r\n  }\r\n\r\n  reset() {\r\n    for (let i = 0; i < this.questionList.length; i++) {\r\n      this.questionList[i].comment = '';\r\n    }\r\n\r\n    this.progress = '0';\r\n    this.currentQuestion = 0;\r\n    this.quizResult = '';\r\n    this.answers = new Map<number, option[]>();\r\n    this.textErrorComment = '';\r\n  }\r\n\r\n  submit() {\r\n    let answersForEachQuestionScores: answer[] = this.buildAnswers();\r\n\r\n    this.questionService.getQuizResult(answersForEachQuestionScores).subscribe(\r\n      (res: string) => {\r\n        this.quizResult = res;\r\n        this.textError = '';\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.textError = 'An error has occured, please try again later';\r\n      }\r\n    );\r\n  }\r\n\r\n  buildAnswers() {\r\n    let answersForEachQuestionScores: answer[] = [];\r\n    for (let i = 0; i < this.answers.size; i++) {\r\n      let options = this.answers.get(i) ?? [];\r\n      let answer: answer = {\r\n        userId: this.userId,\r\n        questionId: this.questionList[i].id,\r\n        chosenOptions: options,\r\n        questionType: this.questionList[i].type,\r\n        comment: this.questionList[i].comment,\r\n      };\r\n      answersForEachQuestionScores.push(answer);\r\n    }\r\n    return answersForEachQuestionScores;\r\n  }\r\n\r\n  setTextErrorComment(textErrorComment: string) {\r\n    this.textErrorComment = textErrorComment;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}